import numpy as np
from scipy.optimize import fsolve
from ODEsolver import solve_odes

def predator_prey(X, t, pars):
    x = X[0]
    y = X[1]
    a, b, d = pars[0], pars[1], pars[2]
    dxdt = x * (1 - x) - (a * x * y) / (d + x)
    dydt = b * y * (1 - (y / x))
    return np.array([dxdt, dydt])

pars = [1.0, 0.2, 0.1]
u0 = [0.5779027054793053, 0.2860464315137474]
def objective(v0):
    sol,t = solve_odes(predator_prey, x0=u0, t0=0, t1=500, dt_max=0.01, pars=pars)
    print(sol.size)
    print(objective)
    return sol[:,-1]

v0, = fsolve(objective, 20)
print(v0)

